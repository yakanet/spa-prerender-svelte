{"version":3,"file":"i18n-util.c37db97b.js","sources":["../../../../../../src/i18n/i18n-util.ts"],"sourcesContent":["// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.\n/* eslint-disable */\n\nimport { i18n as initI18n, i18nObject as initI18nObject, i18nString as initI18nString } from 'typesafe-i18n'\nimport type { LocaleDetector } from 'typesafe-i18n/detectors'\nimport type { LocaleTranslationFunctions, TranslateByString } from 'typesafe-i18n'\nimport { detectLocale as detectLocaleFn } from 'typesafe-i18n/detectors'\nimport { initExtendDictionary } from 'typesafe-i18n/utils'\nimport type { Formatters, Locales, Translations, TranslationFunctions } from './i18n-types'\n\nexport const baseLocale: Locales = 'fr'\n\nexport const locales: Locales[] = [\n\t'en',\n\t'fr'\n]\n\nexport const isLocale = (locale: string): locale is Locales => locales.includes(locale as Locales)\n\nexport const loadedLocales: Record<Locales, Translations> = {} as Record<Locales, Translations>\n\nexport const loadedFormatters: Record<Locales, Formatters> = {} as Record<Locales, Formatters>\n\nexport const extendDictionary = initExtendDictionary<Translations>()\n\nexport const i18nString = (locale: Locales): TranslateByString => initI18nString<Locales, Formatters>(locale, loadedFormatters[locale])\n\nexport const i18nObject = (locale: Locales): TranslationFunctions =>\n\tinitI18nObject<Locales, Translations, TranslationFunctions, Formatters>(\n\t\tlocale,\n\t\tloadedLocales[locale],\n\t\tloadedFormatters[locale]\n\t)\n\nexport const i18n = (): LocaleTranslationFunctions<Locales, Translations, TranslationFunctions> =>\n\tinitI18n<Locales, Translations, TranslationFunctions, Formatters>(loadedLocales, loadedFormatters)\n\nexport const detectLocale = (...detectors: LocaleDetector[]): Locales => detectLocaleFn<Locales>(baseLocale, locales, ...detectors)\n"],"names":["baseLocale","locales","isLocale","locale","loadedLocales","loadedFormatters"],"mappings":"AAUO,MAAMA,EAAsB,KAEtBC,EAAqB,CACjC,KACA,IACD,EAEaC,EAAYC,GAAsCF,EAAQ,SAASE,CAAiB,EAEpFC,EAA+C,CAAC,EAEhDC,EAAgD,CAAA"}